{
"admin": {
    "adminadd": {
        "args": "<nick>",
        "desc": "Add an administrator by nick."
        },
    "adminhelp": {
        "args": "[cmd]",
        "desc": "Show help for an admin command, or list all cmds."
        },
    "adminlist": {
        "args": null,
        "desc": "List all current administrators."
        },
    "adminmsg": {
        "args": "<msg>",
        "desc": "Send a msg to all pyvalbot admins."
        },
    "adminreload": {
        "args": null,
        "desc": "Reload admins list from disk."
        },
    "adminrem": {
        "args": "<nick>",
        "desc": "Shortcut for adminremove."
        },
    "adminremove": {
        "args": "<nick>",
        "desc": "Remove an administrator by nick."
        },
    "ban": {
        "args": "<nick>",
        "desc": "Ban a nick from using the bot."
        },
    "banned": {
        "args": null,
        "desc": "List all currently banned nicks."
        },
    "blacklist": {
        "args": "[on, off, ?]",
        "desc": "Change pyvalexec's blacklist option, or  show the current value."
        },
    "channels": {
        "args": null,
        "desc": "Show current channels that pyval is in."
        },
    "chanmsg": {
        "args": "<msg>",
        "desc": "Send a msg to all channels pyvalbot is in."
        },
    "configget": {
        "args": "<option>",
        "desc": "Get a config option's value. Certain options are hidden from chat."
        },
    "configlist": {
        "args": null,
        "desc": "List current config."
        },
    "configsave": {
        "args": null,
        "desc": "Save current command-line options to permanent config."
        },
    "configset": {
        "args": "<option> <value>",
        "desc": "Set a config option's value. String values only for now. Remove options by passing - as the value."
        },
    "getattr": {
        "args": "<attribute>",
        "desc": "Retrieve the value of a pyval CommandFuncs  attribute. (ex: admins.channels)"
            },
    "id": {
        "args": "<password>",
        "desc": "Identify with NickServ. (shortcut for the identify command)"
        },
    "identify": {
        "args": "<password>",
        "desc": "Identify with NickServ."
        },
    "join": {
        "args": "<channels>",
        "desc": "Join a channel or multiple channels (using a comma-separated list)"
        },
    "limitrate": {
        "args": "[on, off, ?]",
        "desc": "Change pyval's limitrate option, or show the current value."
        },
    "me": {
        "args": "<channel> <text>",
        "desc": "Make pyval perform an irc action (/ME <text>) in a channel."
        },
    "msg": {
        "args": "<target> <message>",
        "desc": "Send a message to a nick or channel as pyvalbot."
        },
    "part": {
        "args": "<channels>",
        "desc": "Part/Leave a channel or multiple channels (using a comma-separated list)"
        },
    "partall": {
        "args": null,
        "desc": "Part/Leave all current channels."
        },
    "say": {
        "args": "<message>",
        "desc": "Make pyvalbot respond to you with a message."
        },
    "sendline": {
        "args": "<data>",
        "desc": "Send a raw line to the irc server as pyvalbot."
        },
    "setattr": {
        "args": "<attribute> <val>",
        "desc": "Set a pyval CommandFuncs attribute. (ex: !setattr admin.blacklist True)"
        },
    "shutdown": {
        "args": null,
        "desc": "Shut pyval down cleanly, disconnect and kill the process."
        },
    "stats": {
        "args": null,
        "desc": "Show handled-count (number of commands handled), and uptime (time since startup)"
        },
    "unban": {
        "args": "<nick>",
        "desc": "Remove a nick from the banned list."
        }
    },
"user": {
    "help": {
        "args": "[cmdname]",
        "desc": "list commands or show command help."
        },
    "py": {
        "args": "[--paste] <python code>",
        "desc": "evaluates python code through pypy-sandbox. force output to the pastebin with -p or --paste."
        },
    "python": {
        "args": "[--paste] <python code>",
        "desc": "evaluates python code through pypy-sandbox. force output to the pastebin with -p or --paste."
        },
    "pyval": {
        "args": "<message>",
        "desc": "say something to the pyval operator."
        },
    "time": {
        "args": null,
        "desc": "shows current time for pyval."
        },
    "uptime": {
        "args": null,
        "desc": "show uptime for pyval."
        }
    }
}
